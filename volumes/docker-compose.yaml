version: "3.9"
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --loglevel warning
    # Persistent data
    volumes:
      - ./docker-volumes/cache:/data
    networks:
      - elastic

  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    networks:
      - elastic
    # ports:
    #   - 27017:27017
    volumes:
      - ./docker-volumes/data:/data/db

  mysql:
    container_name: mysql_container
    image: mysql:latest
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: api_root
      MYSQL_USER: ecommerce
      MYSQL_DATABASE: ecommerce_auth
      MYSQL_PASSWORD: api
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql
    networks:
      - elastic

  postgres:
    container_name: postgres_container
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: api
      POSTGRES_USER: ecommerce
      POSTGRES_DB: ecommerce_reviews
    # ports:
    #   - 5432:5432
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql
    networks:
      - elastic

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=ecommerce
      - RABBITMQ_DEFAULT_PASS=api
    ports:
      # AMQP protocol port
      - 5672:5672
      # Management UI
      - 15672:15672
    networks:
      - elastic

  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      network.host: 0.0.0.0
      transport.host: 127.0.0.1
      http.host: 0.0.0.0
      # xpack.security.enabled: "false"
      xpack.security.enabled: "true"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
      xpack.security.authc.token.enabled: "true"
      ELASTIC_PASSWORD: admin1234
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.11.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]

      # have to run the curl command first : curl -s -X POST -u elastic:admin1234 -H "Content-Type: application/json" http://localhost:9200/_security/user/kibana_system/_password -d "{\"password\":\"kibana\"}"
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=kibana
      # and run: bin/elasticsearch-service-tokens create elastic/kibana ecommerce-kibana
      - ELASTICSEARCH_SERVICEACCOUNT_TOKEN=AAEAAWVsYXN0aWMva2liYW5hL2Vjb21tZXJjZS1raWJhbmE6SWE0M0dlMmhTT2E1ZXBKbkU1Q2x2UQ
      - XPACK_FLEET_AGENTS_ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]

    ports:
      - 5601:5601
    networks:
      - elastic
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch
      - rabbitmq

  apmServer:
    image: docker.elastic.co/apm/apm-server:8.11.0
    container_name: apm_server_container
    ports:
      - 8200:8200
    volumes:
      - ./apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    networks:
      - elastic
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana_container:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana_container:5601
        -E apm-server.kibana.protocol=http
        -E strict.perms=false
        -E apm-server.auth.anonymous.enabled=true
    # anonymous true so the ELASTIC_APM_SECRET_TOKEN is always empty
    depends_on:
      - elasticsearch
      - kibana

  metricbeat:
    container_name: metricbeat_container
    image: docker.elastic.co/beats/metricbeat:8.11.0
    restart: always
    # so that metricbeat can read docker socket
    user: root
    ports:
      - 5066:5066
    networks:
      - elastic
    volumes:
      - ./metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      # docker module
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # system module
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
    # This command to allow metric to get information from system
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    depends_on:
      - elasticsearch
      - apmServer
      - kibana
      - rabbitmq

  heartbeat:
    container_name: heartbeat_container
    image: docker.elastic.co/beats/heartbeat:8.11.0
    restart: always
    # so that metricbeat can read docker socket
    user: root
    hostname: heartbeat
    cap_add:
      - NET_RAW
    networks:
      - elastic
    command: ["--strict.perms=false"]
    volumes:
      - ./heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro
    depends_on:
      - elasticsearch
      - apmServer
      - kibana
      - rabbitmq

  gateway:
    image: quan0401/ecommerce-gateway:latest
    container_name: gateway_container
    build:
      context: ../server/1-gateway-service
      # dockerfile: Dockerfile.dev
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4000:4000
    env_file: ../server/1-gateway-service/.env
    environment:
      - ENABLE_APM=0
      - GATEWAY_JWT_TOKEN=1282722b942e08c8a6cb033aa6ce850e
      - JWT_TOKEN=8db8f85991bb28f45ac0107f2a1b349c
      - NODE_ENV=development
      - SECRET_KEY_ONE=032c5c3cfc37938ae6dd43d3a3ec7834
      - SECRET_KEY_TWO=d66e377018c0bc0b5772bbc9b131e6d9
      - CLIENT_URL=http://localhost:3000
      - AUTH_BASE_URL=http://host.docker.internal:4002
      # - AUTH_BASE_URL=http://localhost:4002
      # - USERS_BASE_URL=http://localhost:4003
      - USERS_BASE_URL=http://host.docker.internal:4003
      - GIG_BASE_URL=http://host.docker.internal:4004
      - MESSAGE_BASE_URL=http://host.docker.internal:4005
      - ORDER_BASE_URL=http://host.docker.internal:4006
      - REVIEW_BASE_URL=http://host.docker.internal:4007
      - REDIS_HOST=redis://host.docker.internal:6379
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200 # work
      # - ELASTIC_SEARCH_URL=http://elastic:admin1234@host.docker.internal:9200
      # - ELASTIC_SEARCH_URL=http://host.docker.internal:9200 # work

      # - ELASTIC_SEARCH_URL=http://elastic:admin1234@host.docker.internal:9200 # work
      # - ELASTIC_APM_SERVER_URL=http://localhost:8200 # work
      - ELASTIC_APM_SERVER_URL=http://host.docker.internal:8200
      - ELASTIC_APM_SECRET_TOKEN=
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - apmServer
      - kibana
      - rabbitmq
      - redis
  notifications:
    image: quan0401/ecommerce-notifications:latest
    container_name: notifications_container
    build:
      context: ../server/2-notification-service
      # dockerfile: Dockerfile.dev
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4001:4001
    env_file: ../server/2-notification-service/.env
    environment:
      - ENABLE_APM=0
      - NODE_ENV=development
      - CLIENT_URL=http://host.docker.internal:3000
      # - RABBITMQ_ENDPOINT=amqp://ecommerce:api@localhost:5672
      # - RABBITMQ_ENDPOINT=amqp://ecommerce:api@rabbitmq_container:5672
      - RABBITMQ_ENDPOINT=amqp://ecommerce:api@host.docker.internal:5672
      - SENDER_EMAIL=vickie.mueller78@ethereal.email
      - SENDER_EMAIL_PASSWORD=9gygFNxsZYEwv4zeSN
      # - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200 # work
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@host.docker.internal:9200 # work
      # - ELASTIC_APM_SERVER_URL=http://localhost:8200 # work
      - ELASTIC_APM_SERVER_URL=http://host.docker.internal:8200
      - ELASTIC_APM_SECRET_TOKEN=
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - apmServer
      - kibana
      - rabbitmq
  auth:
    image: quan0401/ecommerce-auth:latest
    container_name: auth_container
    build:
      context: ../server/3-auth-service
      # dockerfile: Dockerfile.dev
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4002:4002
    env_file: ../server/3-auth-service/.env
    environment:
      - ENABLE_APM=0
      - GATEWAY_JWT_TOKEN=1282722b942e08c8a6cb033aa6ce850e
      - JWT_TOKEN=8db8f85991bb28f45ac0107f2a1b349c
      - NODE_ENV=development
      - API_GATEWAY_URL=http://host.docker.internal:4000
      - RABBITMQ_ENDPOINT=amqp://ecommerce:api@host.docker.internal:5672
      - MYSQL_DB=mysql://ecommerce:api@mysql_container:3306/ecommerce_auth
      - CLOUD_NAME=dg3fsapzu
      - CLOUD_API_KEY=799483692214735
      - CLOUD_API_SECRET=3E0VN2YkCVyMjlBWUmQ7zOdkoB0
      - CLOUD_FOLDER=ecommerce
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://host.docker.internal:8200
      - ELASTIC_APM_SECRET_TOKEN=
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - apmServer
      - kibana
      - rabbitmq
      - mysql
  user:
    image: quan0401/ecommerce-user:latest
    container_name: user_container
    build:
      context: ../server/4-users-service
      # dockerfile: Dockerfile.dev
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4003:4003
    env_file: ../server/4-users-service/.env
    environment:
      - ENABLE_APM=0
      - DATABASE_URL=mongodb://mongodb:27017/ecommerce-users
      - GATEWAY_JWT_TOKEN=1282722b942e08c8a6cb033aa6ce850e
      - JWT_TOKEN=8db8f85991bb28f45ac0107f2a1b349c
      - NODE_ENV=development
      - API_GATEWAY_URL=http://host.docker.internal:4000
      # - RABBITMQ_ENDPOINT=amqp://ecommerce:api@localhost:5672
      # - MYSQL_DB=mysql://ecommerce:api@localhost:3306/ecommerce_auth
      - RABBITMQ_ENDPOINT=amqp://ecommerce:api@host.docker.internal:5672
      - MYSQL_DB=mysql://ecommerce:api@host.docker.internal:3306/ecommerce_auth
      - CLOUD_NAME=dg3fsapzu
      - CLOUD_API_KEY=799483692214735
      - CLOUD_API_SECRET=3E0VN2YkCVyMjlBWUmQ7zOdkoB0
      - CLOUD_FOLDER=ecommerce
      - REDIS_HOST=redis://host.docker.internal:6379
      # - ELASTIC_SEARCH_URL=http://elastic:admin1234@localhost:9200
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://host.docker.internal:8200
      - ELASTIC_APM_SECRET_TOKEN=
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - apmServer
      - kibana
      - rabbitmq
      - mongodb
  gig:
    image: quan0401/ecommerce-gig:latest
    container_name: gig_container
    build:
      context: ../server/5-gig-service
      # dockerfile: Dockerfile.dev
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4004:4004
    env_file: ../server/5-gig-service/.env
    environment:
      - ENABLE_APM=0
      - DATABASE_URL=mongodb://mongodb_container:27017/ecommerce-gig
      - GATEWAY_JWT_TOKEN=1282722b942e08c8a6cb033aa6ce850e
      - JWT_TOKEN=8db8f85991bb28f45ac0107f2a1b349c
      - NODE_ENV=development
      - API_GATEWAY_URL=http://host.docker.internal:4000
      - RABBITMQ_ENDPOINT=amqp://ecommerce:api@host.docker.internal:5672
      - CLOUD_NAME=dg3fsapzu
      - CLOUD_API_KEY=799483692214735
      - CLOUD_API_SECRET=3E0VN2YkCVyMjlBWUmQ7zOdkoB0
      - CLOUD_FOLDER=ecommerce
      - REDIS_HOST=redis://host.docker.internal:6379
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://host.docker.internal:8200
      - ELASTIC_APM_SECRET_TOKEN=
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - apmServer
      - kibana
      - rabbitmq
      - mongodb
  chat:
    image: quan0401/ecommerce-chat:latest
    container_name: chat_container
    build:
      context: ../server/6-chat-service
      # dockerfile: Dockerfile.dev
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4005:4005
    env_file: ../server/6-chat-service/.env
    environment:
      - ENABLE_APM=0
      - DATABASE_URL=mongodb://mongodb_container:27017/ecommerce-chat
      - GATEWAY_JWT_TOKEN=1282722b942e08c8a6cb033aa6ce850e
      - JWT_TOKEN=8db8f85991bb28f45ac0107f2a1b349c
      - NODE_ENV=development
      - API_GATEWAY_URL=http://host.docker.internal:4000
      - RABBITMQ_ENDPOINT=amqp://ecommerce:api@host.docker.internal:5672
      - CLOUD_NAME=dg3fsapzu
      - CLOUD_API_KEY=799483692214735
      - CLOUD_API_SECRET=3E0VN2YkCVyMjlBWUmQ7zOdkoB0
      - CLOUD_FOLDER=ecommerce
      - REDIS_HOST=redis://localhost:6379
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://host.docker.internal:8200
      - ELASTIC_APM_SECRET_TOKEN=
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - apmServer
      - kibana
      - rabbitmq
      - mongodb
  order:
    image: quan0401/ecommerce-order:latest
    container_name: order_container
    build:
      context: ../server/7-order-service
      # dockerfile: Dockerfile.dev
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4006:4006
    env_file: ../server/7-order-service/.env
    environment:
      - ENABLE_APM=0
      - DATABASE_URL=mongodb://mongodb_container:27017/ecommerce-order
      - GATEWAY_JWT_TOKEN=1282722b942e08c8a6cb033aa6ce850e
      - JWT_TOKEN=8db8f85991bb28f45ac0107f2a1b349c
      - NODE_ENV=development
      - API_GATEWAY_URL=http://host.docker.internal:4000
      - RABBITMQ_ENDPOINT=amqp://ecommerce:api@host.docker.internal:5672
      - CLOUD_NAME=dg3fsapzu
      - CLOUD_API_KEY=799483692214735
      - CLOUD_API_SECRET=3E0VN2YkCVyMjlBWUmQ7zOdkoB0
      - CLOUD_FOLDER=ecommerce
      - REDIS_HOST=redis://localhost:6379
      - STRIPE_API_KEY=sk_test_51J3ZQvK5
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://host.docker.internal:8200
      - ELASTIC_APM_SECRET_TOKEN=
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - apmServer
      - kibana
      - rabbitmq
      - mongodb
  review:
    image: quan0401/ecommerce-review:latest
    container_name: review_container
    build:
      context: ../server/8-review-service
      # dockerfile: Dockerfile.dev # built successfully
      dockerfile: Dockerfile
    restart: always
    # volumes:
    #   - ../server/8-review-service/src:/app/src
    ports:
      - 4007:4007
    env_file: ../server/8-review-service/.env
    environment:
      - ENABLE_APM=1
      - DATABASE_HOST=postgres_container
      - DATABASE_USER=ecommerce
      - DATABASE_PASSWORD=api
      - DATABASE_NAME=ecommerce_reviews
      - GATEWAY_JWT_TOKEN=1282722b942e08c8a6cb033aa6ce850e
      - JWT_TOKEN=8db8f85991bb28f45ac0107f2a1b349c
      - NODE_ENV=development
      - API_GATEWAY_URL=http://host.docker.internal:4000
      - RABBITMQ_ENDPOINT=amqp://ecommerce:api@host.docker.internal:5672
      - CLOUD_NAME=dg3fsapzu
      - CLOUD_API_KEY=799483692214735
      - CLOUD_API_SECRET=3E0VN2YkCVyMjlBWUmQ7zOdkoB0
      - CLOUD_FOLDER=ecommerce
      - REDIS_HOST=redis://localhost:6379
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://apm_server_container:8200
      - ELASTIC_APM_SECRET_TOKEN=
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - apmServer
      - kibana
      - rabbitmq
      - postgres

networks:
  elastic:
    name: elastic
